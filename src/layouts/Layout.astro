---
// biome-ignore lint/correctness/noUnusedImports: ChatwootWidget is used in JSX below
import ChatwootWidget from '../components/ChatwootWidget.astro';
// biome-ignore lint/correctness/noUnusedImports: Navbar is used in JSX below
import Navbar from '../components/Navbar.astro';
import { getMediaUrl } from '../lib/directus.js';
import { generateThemeCSS, getThemeName } from '../lib/theme.js';
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  domain?: string;
  ga4Id?: string;
  pixelId?: string;
  hotel?: Record<string, unknown>; // Hotel data for automatic theme generation
  hotelSubdomain?: string; // For theme naming
  // Legacy props for backward compatibility
  themeCSS?: string;
  themeName?: string;
  hotelName?: string;
  themeConfig?: Record<string, unknown>;
  hotelLogo?: Record<string, unknown> | null;
  showNavbar?: boolean;
}

const {
  // biome-ignore lint/correctness/noUnusedVariables: title is used in JSX below
  title,
  // biome-ignore lint/correctness/noUnusedVariables: description is used in JSX below
  description = 'Hotel website powered by Daotomata Stack',
  // biome-ignore lint/correctness/noUnusedVariables: domain is used in JSX below
  domain,
  // biome-ignore lint/correctness/noUnusedVariables: ga4Id is used in JSX below
  ga4Id,
  // biome-ignore lint/correctness/noUnusedVariables: pixelId is used in JSX below
  pixelId,
  hotel,
  hotelSubdomain,
  // Legacy props for backward compatibility
  themeCSS: legacyThemeCSS,
  themeName: legacyThemeName,
  // biome-ignore lint/correctness/noUnusedVariables: hotelName is used in JSX below
  hotelName = 'Hotel',
  themeConfig: legacyThemeConfig = {},
  hotelLogo: legacyHotelLogo = null,
  // biome-ignore lint/correctness/noUnusedVariables: showNavbar is used in JSX below
  showNavbar = true,
} = Astro.props;

// Auto-generate theme from hotel data or use legacy props
let themeCSS: string | undefined,
  themeName: string | undefined,
  themeConfig: Record<string, unknown> | undefined,
  hotelLogo: Record<string, unknown> | null | undefined;

if (hotel && hotelSubdomain) {
  // Generate theme automatically from hotel data
  console.log('ðŸŽ¨ Layout.astro - Auto-generating theme for:', hotelSubdomain);
  console.log('ðŸŽ¨ Hotel data received:', {
    name: hotel.name,
    domain: hotel.domain,
    hasTheme: !!hotel.theme,
    themeKeys: hotel.theme ? Object.keys(hotel.theme) : [],
    hasLogo: !!hotel.logo,
    logoId: hotel.logo?.id,
  });

  themeCSS = generateThemeCSS(hotel, hotelSubdomain);
  themeName = getThemeName(hotelSubdomain);
  themeConfig = hotel.theme || {};
  hotelLogo = hotel.logo || null;

  console.log('ðŸŽ¨ Generated theme:', {
    themeName,
    themeConfigKeys: Object.keys(themeConfig),
    cssLength: themeCSS?.length || 0,
    hotelLogoId: hotelLogo?.id,
  });
} else {
  // Use legacy props for backward compatibility
  console.log('ðŸŽ¨ Layout.astro - Using legacy theme props');
  themeCSS = legacyThemeCSS;
  themeName = legacyThemeName;
  themeConfig = legacyThemeConfig;
  hotelLogo = legacyHotelLogo;
}

// Generate dynamic favicon URLs from hotel logo
const _faviconUrl = hotelLogo?.id
  ? getMediaUrl(hotelLogo.id, { width: 32, height: 32, quality: 90, format: 'png' })
  : '/favicon.svg';
const _favicon16Url = hotelLogo?.id
  ? getMediaUrl(hotelLogo.id, { width: 16, height: 16, quality: 90, format: 'png' })
  : '/favicon.svg';
const _appleIconUrl = hotelLogo?.id
  ? getMediaUrl(hotelLogo.id, { width: 180, height: 180, quality: 90, format: 'png' })
  : '/favicon.svg';
---

<!doctype html>
<html lang="en" data-theme={themeName}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Dynamic favicon based on hotel logo -->
    {hotelLogo && hotelLogo.id ? (
      <>
        <link rel="icon" type="image/png" sizes="32x32" href={_faviconUrl} />
        <link rel="icon" type="image/png" sizes="16x16" href={_favicon16Url} />
        <link rel="apple-touch-icon" sizes="180x180" href={_appleIconUrl} />
      </>
    ) : (
      <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    )}

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    

    
    <!-- Dynamic theme CSS -->
    {themeCSS && (
      <style set:html={themeCSS} />
    )}
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600&family=Oswald:wght@400;500;600;700&family=Poppins:wght@300;400;500;700&family=Montserrat:wght@300;400;500;600;700&family=EB+Garamond:ital,wght@0,400;0,500;1,400;1,500&family=JetBrains+Mono:wght@400;500&display=swap"
      rel="stylesheet"
    />
    
    <!-- Google Analytics 4 -->
    {ga4Id && (
      <>
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${ga4Id}`}></script>
        <script>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', '{ga4Id}');
        </script>
      </>
    )}
    
    <!-- Meta Pixel -->
    {pixelId && (
      <script>
        !function(f,b,e,v,n,t,s)
        {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
        n.callMethod.apply(n,arguments):n.queue.push(arguments)};
        if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
        n.queue=[];t=b.createElement(e);t.async=!0;
        t.src=v;s=b.getElementsByTagName(e)[0];
        s.parentNode.insertBefore(t,s)}(window, document,'script',
        'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '{pixelId}');
        fbq('track', 'PageView');
      </script>
      <noscript>
        <img height="1" width="1" style="display:none"
             src={`https://www.facebook.com/tr?id=${pixelId}&ev=PageView&noscript=1`} />
      </noscript>
    )}
  </head>
  <body class="bg-base-100 min-h-screen">
    <!-- Navigation -->
    {showNavbar && (
      <Navbar
        hotelName={hotelName}
        hotelDomain={domain || 'demo.localhost'}
        currentPath={Astro.url.pathname}
        themeConfig={themeConfig}
        hotelLogo={hotelLogo}
      />
    )}

    <!-- Main Content -->
    <main class="main-content">
      <slot />
    </main>

    <!-- Auto-inject Chatwoot Widget with automatic domain detection -->
    <ChatwootWidget />
  </body>
</html>

<style>
  html {
    font-family: var(--font-family, 'Inter', sans-serif);
  }
  
  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
  }
</style>
