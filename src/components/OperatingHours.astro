---
import { parseOperatingHours } from '../utils/operating-hours.js';

interface Props {
  operatingHours: string | object | null;
  showTitle?: boolean;
  compact?: boolean;
  className?: string;
}

const {
  operatingHours,
  showTitle = true,
  compact = false,
  className = '',
} = Astro.props;

const parsedHours = parseOperatingHours(operatingHours);
---

{
  parsedHours && (
    <div class={`operating-hours ${className}`}>
      {showTitle && (
        <h4 class="font-medium text-sm mb-3 text-primary">Operating Hours</h4>
      )}

      {parsedHours.raw ? (
        <div class="bg-base-200/50 border border-base-300 rounded-lg p-3">
          <div class="text-sm text-base-content/70">{parsedHours.raw}</div>
        </div>
      ) : (
        <div class="bg-base-200/50 border border-base-300 rounded-lg p-3">
          {compact ? (
            <div class="space-y-1">
              {Object.entries(parsedHours)
                .slice(0, 3)
                .map(([day, hours]) => (
                  <div class="flex justify-between items-center text-sm">
                    <span class="capitalize font-medium">
                      {day.substring(0, 3)}
                    </span>
                    <span class="badge badge-outline badge-sm">
                      {hours.formatted}
                    </span>
                  </div>
                ))}
              {Object.keys(parsedHours).length > 3 && (
                <div class="text-center text-xs text-base-content/60 pt-1">
                  +{Object.keys(parsedHours).length - 3} more days...
                </div>
              )}
            </div>
          ) : (
            <div class="overflow-x-auto">
              <table class="table table-zebra w-full">
                <tbody>
                  {Object.entries(parsedHours).map(([day, hours]) => (
                    <tr>
                      <td class="font-medium capitalize text-sm py-2">{day}</td>
                      <td class="text-sm py-2">
                        <span
                          class={`badge badge-outline badge-sm ${hours.formatted === 'Closed' ? 'badge-error' : 'badge-success'}`}
                        >
                          {hours.formatted}
                        </span>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>
      )}
    </div>
  )
}
