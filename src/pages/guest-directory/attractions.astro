---
export const prerender = true; // ‚úÖ SSG - Pre-render at build time

import CollectionPageLayout from '../../layouts/CollectionPageLayout.astro';
import { GuestDirectoryCard } from '../../components/GuestDirectoryCard.tsx';
import OperatingHours from '../../components/OperatingHours.astro';
import {
  getCurrentHotel,
  getLocalPlacesByHotelId,
  getCurrentHotelId,
  getMediaUrl,
} from '../../lib/directus.js';
import type { Hotel } from '../../types/hotel.ts';

console.log(`üèóÔ∏è [BUILD] Pre-rendering guest directory attractions page...`);

// Get hotel data from environment variable
const hotelData = await getCurrentHotel();

if (!hotelData) {
  throw new Error('Hotel not found. Check HOTEL_ID in environment variables.');
}

const hotel = hotelData as Hotel;
const hotelId = getCurrentHotelId();

console.log(`‚úÖ [BUILD] Hotel loaded: ${hotel.name} (ID: ${hotel.id})`);

// Get local places (excluding dining)
const allLocalPlaces = await getLocalPlacesByHotelId(hotelId);
const attractions = allLocalPlaces.filter(
  (place) => place.category !== 'food_and_drink'
);

// Simple theme name extraction
const hotelSlug = hotel.domain?.split('.')[0] || 'default';

console.log(`‚úÖ Attractions data loaded: ${attractions.length} attractions`);
---

<CollectionPageLayout
  title={`Local Attractions - ${hotel.name}`}
  description={`Discover amazing local attractions and points of interest near ${hotel.name}`}
  pageTitle="Local Attractions"
  pageDescription="Explore the best that our destination has to offer"
  hotel={hotel}
  hotelSubdomain={hotelSlug}
  hotelDomain={hotel.domain}
  isSubdomain={true}
  items={attractions}
  itemType="experiences"
  breadcrumbItems={[
    { label: hotel.name, href: '/' },
    { label: 'Guest Directory', href: '/guest-directory' },
    { label: 'Attractions' },
  ]}
  ctaTitle="Plan Your Adventure"
  ctaDescription="Let our concierge help you discover hidden gems and plan the perfect itinerary"
  ctaPrimaryText="Contact Concierge"
  ctaPrimaryHref="/contact"
  ctaSecondaryText="Get Directions"
  ctaSecondaryHref="/contact"
  gridId="attractions-guide-grid"
>
  <Fragment slot="items">
    {
      attractions.map((attraction) => (
        <div class="card bg-base-100 border-2 border-base-300">
          {attraction.main_photo?.id && (
            <figure class="aspect-video overflow-hidden">
              <img
                src={getMediaUrl(attraction.main_photo.id, {
                  width: 400,
                  height: 250,
                })}
                alt={attraction.name}
                class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                loading="lazy"
              />
            </figure>
          )}

          <div class="card-body">
            <div class="flex items-start justify-between mb-2">
              <h3 class="card-title text-lg">{attraction.name}</h3>
              <div class="badge badge-secondary badge-sm">
                {attraction.category.replace('_', ' ')}
              </div>
            </div>

            {attraction.description && (
              <p class="text-base-content/70 text-sm mb-4 line-clamp-3">
                {attraction.description}
              </p>
            )}

            {/* Attraction Details */}
            <div class="mb-4">
              <h4 class="font-medium text-sm mb-3 text-primary">Details</h4>
              <div class="grid grid-cols-1 gap-2">
                <div class="flex items-center justify-between p-2 bg-base-200/30 rounded border border-base-300/50">
                  <span class="text-sm font-medium">Distance from Hotel</span>
                  <div class="badge badge-secondary badge-sm">
                    {attraction.distance_from_hotel}m away
                  </div>
                </div>

                {attraction.price_range && (
                  <div class="flex items-center justify-between p-2 bg-base-200/30 rounded border border-base-300/50">
                    <span class="text-sm font-medium">Price Range</span>
                    <div class="badge badge-accent badge-sm">
                      {attraction.price_range === 'free' && 'Free'}
                      {attraction.price_range === 'budget' && '$ Budget'}
                      {attraction.price_range === 'moderate' && '$$ Moderate'}
                      {attraction.price_range === 'expensive' && '$$$ Premium'}
                    </div>
                  </div>
                )}

                {attraction.address && (
                  <div class="p-2 bg-base-200/30 rounded border border-base-300/50">
                    <div class="text-sm font-medium mb-1">Address</div>
                    <div class="text-xs text-base-content/70 leading-relaxed">
                      {attraction.address}
                    </div>
                  </div>
                )}
              </div>
            </div>

            {/* Contact Information */}
            {(attraction.contact_phone || attraction.contact_website) && (
              <div class="mb-4">
                <h4 class="font-medium text-sm mb-3 text-primary">
                  Contact Information
                </h4>
                <div class="space-y-2">
                  {attraction.contact_phone && (
                    <div class="flex items-center gap-3 p-2 bg-base-200/30 rounded border border-base-300/50">
                      <div class="w-5 h-5 rounded-full bg-success/20 flex items-center justify-center">
                        <span class="text-xs">üìû</span>
                      </div>
                      <div class="flex-1">
                        <div class="text-xs text-base-content/60">Phone</div>
                        <a
                          href={`tel:${attraction.contact_phone}`}
                          class="text-sm font-medium link link-primary"
                        >
                          {attraction.contact_phone}
                        </a>
                      </div>
                    </div>
                  )}

                  {attraction.contact_website && (
                    <div class="flex items-center gap-3 p-2 bg-base-200/30 rounded border border-base-300/50">
                      <div class="w-5 h-5 rounded-full bg-info/20 flex items-center justify-center">
                        <span class="text-xs">üåê</span>
                      </div>
                      <div class="flex-1">
                        <div class="text-xs text-base-content/60">Website</div>
                        <a
                          href={attraction.contact_website}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="text-sm font-medium link link-primary"
                        >
                          Visit Website
                        </a>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}

            {/* Tags */}
            {attraction.tags && attraction.tags.length > 0 && (
              <div class="flex flex-wrap gap-1 mb-4">
                {attraction.tags.slice(0, 3).map((tag) => (
                  <div class="badge badge-ghost badge-xs">{tag}</div>
                ))}
                {attraction.tags.length > 3 && (
                  <div class="badge badge-ghost badge-xs">
                    +{attraction.tags.length - 3} more
                  </div>
                )}
              </div>
            )}

            {/* Operating Hours */}
            {attraction.opening_hours && (
              <div class="mb-4">
                <OperatingHours
                  operatingHours={attraction.opening_hours}
                  showTitle={true}
                  compact={true}
                />
              </div>
            )}

            <div class="card-actions justify-end">
              <a
                href={`/guest-directory/attractions/${attraction.name.toLowerCase().replace(/\s+/g, '-')}`}
                class="btn btn-primary btn-sm"
              >
                Learn More
              </a>
            </div>
          </div>
        </div>
      ))
    }
  </Fragment>
</CollectionPageLayout>
