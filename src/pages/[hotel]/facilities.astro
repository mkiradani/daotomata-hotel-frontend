---
import { FacilityCard } from '../../components/FacilityCard.tsx';
import CollectionPageLayout from '../../layouts/CollectionPageLayout.astro';
import {
  getAllHotels,
  getHotelByDomain,
  getMediaUrl,
  getTranslatedContent,
} from '../../lib/directus.js';

export const prerender = true;

export async function getStaticPaths() {
  console.log('🏨 Generating static paths for facilities pages...');

  try {
    const hotels = await getAllHotels();
    const paths = [];

    for (const hotel of hotels) {
      console.log(`🏨 Processing hotel: ${hotel.name} (${hotel.domain})`);

      // Extract subdomain from full domain (e.g., "demo" from "demo.daotomata.io")
      const subdomain = hotel.domain.split('.')[0];

      paths.push({
        params: {
          hotel: subdomain,
        },
        props: {
          hotel,
          hotelSubdomain: subdomain,
          defaultLanguage: hotel.default_language || 'en-US',
          isSubdomain: true, // Always true for [hotel] pages in SSG
        },
      });
    }

    console.log(`✅ Generated ${paths.length} facilities page paths`);
    return paths;
  } catch (error) {
    console.error('❌ Error generating facilities static paths:', error);
    return [];
  }
}

const { hotel: hotelData, hotelSubdomain, defaultLanguage } = Astro.props;

// Get current language from URL or use default
const currentLanguage = defaultLanguage;

// Get full hotel data with facilities
const fullHotel = await getHotelByDomain(hotelData.domain);
if (!fullHotel) {
  throw new Error(`Hotel not found for domain: ${hotelData.domain}`);
}

// Build hotel object with translated content
const hotel = {
  // Basic hotel info
  id: fullHotel.id,
  name: fullHotel.name,
  domain: fullHotel.domain,

  // Analytics and integrations
  analytics: {
    ga4_id: fullHotel.ga4_token,
    pixel_id: fullHotel.meta_pixel_token,
  },
  chatwoot_website_token: fullHotel.chatwoot_website_token,

  // Theme data from Directus
  theme: fullHotel.theme || {},
  logo: fullHotel.logo || null,

  // Contact information
  contact_email: fullHotel.contact_email || null,
  contact_phone_calls: fullHotel.contact_phone_calls || null,
  contact_phone_messages: fullHotel.contact_phone_messages || null,
  location: fullHotel.location || null,

  // Related data with translations - focus on facilities for this page
  facilities:
    fullHotel.facilities?.map((facility) =>
      getTranslatedContent(facility, currentLanguage)
    ) || [],

  // Other related data
  chatwoot_accounts: fullHotel.chatwoot_accounts || [],
};

// Get hotel domain and slug
const _hotelDomain = hotel.domain;
const _hotelSlug = hotelSubdomain;

// Breadcrumb items following the same pattern as detail pages
const _breadcrumbItems = [
  { label: hotel.name, href: `/${hotelSubdomain}` },
  { label: 'Facilities' },
];

console.log(
  `✅ Facilities page loaded: ${hotel.name} (${hotel.facilities?.length || 0} facilities)`
);
---

<CollectionPageLayout
  title={`Facilities - ${hotel.name}`}
  description={`Discover our exceptional facilities at ${hotel.name}. From fitness centers to spa services, we offer everything you need for a perfect stay.`}
  pageTitle="Our Facilities"
  pageDescription="Experience our world-class facilities designed to enhance your stay. From relaxation to recreation, we provide everything you need for an unforgettable experience."
  hotel={hotel}
  hotelSubdomain={hotelSubdomain}
  hotelDomain={_hotelDomain}
  items={hotel.facilities || []}
  itemType="facilities"
  breadcrumbItems={_breadcrumbItems}
  ctaTitle="Ready to Experience Our Facilities?"
  ctaDescription={`Book your stay at ${hotel.name} and enjoy access to all our exceptional facilities and amenities.`}
  ctaPrimaryText="Book Now"
  ctaPrimaryHref={`/${hotelSubdomain}/book`}
  ctaSecondaryText="Explore More"
  ctaSecondaryHref={`/${hotelSubdomain}`}
  gridId="facilitiesGrid"
>
  <Fragment slot="items">
    {
      hotel.facilities?.map((facility, index) => {
        const imageUrl = facility.main_photo
          ? getMediaUrl(facility.main_photo.id, {
              width: 800,
              height: 450,
              quality: 95,
            })
          : '';
        const videoUrl = facility.main_video
          ? getMediaUrl(facility.main_video.id)
          : undefined;

        // Create slug from facility name
        const facilitySlug = facility.name
          .toLowerCase()
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/(^-|-$)/g, '');

        console.log(
          `🎥 Facility ${facility.name}: has video = ${!!facility.main_video}, videoUrl = ${videoUrl}`
        );

        return (
          <FacilityCard
            key={facility.id || index}
            name={facility.name}
            description={facility.description}
            facilityType={facility.facility_type}
            capacity={facility.capacity}
            accessType={facility.access_type}
            imageUrl={imageUrl}
            videoUrl={videoUrl}
            isLast={index === hotel.facilities.length - 1}
            isOdd={hotel.facilities.length % 2 !== 0}
            hotelSlug={hotelSubdomain}
            facilitySlug={facilitySlug}
            client:load
          />
        );
      })
    }
  </Fragment>
</CollectionPageLayout>
