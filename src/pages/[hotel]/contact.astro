---
import { Breadcrumb } from '../../components/Breadcrumb.tsx';
import { ContactForm } from '../../components/ContactForm.tsx';
import Layout from '../../layouts/Layout.astro';
import {
  getAllHotels,
  getContactMethodsByHotelId,
  getHotelByDomain,
  getMediaUrl,
  getTranslatedContent,
} from '../../lib/directus.js';

export const prerender = true;

export async function getStaticPaths() {
  console.log('üìû Generating static paths for contact pages...');

  try {
    const hotels = await getAllHotels();
    const paths = [];

    for (const hotel of hotels) {
      console.log(`üè® Processing hotel: ${hotel.name} (${hotel.domain})`);

      // Extract subdomain from full domain (e.g., "baberrih" from "baberrih.ma")
      const subdomain = hotel.domain.split('.')[0];

      paths.push({
        params: {
          hotel: subdomain,
        },
        props: {
          hotel,
          hotelSubdomain: subdomain,
          defaultLanguage: hotel.default_language || 'en-US',
          defaultCurrency: hotel.default_currency || 'USD',
          isSubdomain: true, // Always true for [hotel] pages in SSG
        },
      });
    }

    console.log(`‚úÖ Generated ${paths.length} contact page paths`);
    return paths;
  } catch (error) {
    console.error('‚ùå Error generating contact static paths:', error);
    return [];
  }
}

const {
  hotel: hotelData,
  hotelSubdomain,
  defaultLanguage,
  defaultCurrency,
  isSubdomain,
} = Astro.props;

// Get current language (default to English for now)
const currentLanguage = defaultLanguage || 'en-US';

// Get hotel data
const fullHotel = await getHotelByDomain(hotelData.domain);

if (!fullHotel) {
  throw new Error(`Hotel not found for domain: ${hotelData.domain}`);
}

// Process hotel data with translations
const hotel = {
  id: fullHotel.id,
  name: getTranslatedContent(fullHotel, currentLanguage).name || fullHotel.name,
  description:
    getTranslatedContent(fullHotel, currentLanguage).description ||
    fullHotel.description,
  domain: fullHotel.domain,
  default_currency: fullHotel.default_currency || defaultCurrency,

  // Analytics
  analytics: fullHotel.analytics || {},

  // Chatwoot
  chatwoot_website_token: fullHotel.chatwoot_website_token,

  // Theme data from Directus
  theme: fullHotel.theme || {},
  logo: fullHotel.logo || null,

  // Contact information
  contact_email: fullHotel.contact_email || null,
  contact_phone_calls: fullHotel.contact_phone_calls || null,
  contact_phone_messages: fullHotel.contact_phone_messages || null,
  location: fullHotel.location || null,

  // Other related data
  chatwoot_accounts: fullHotel.chatwoot_accounts || [],
};

// Get contact methods for this hotel
const contactMethods = await getContactMethodsByHotelId(fullHotel.id);

console.log(
  `‚úÖ Contact page loaded: ${hotel.name} (Email: ${hotel.contact_email || 'N/A'}, Phone: ${hotel.contact_phone_calls || 'N/A'}, Contact Methods: ${contactMethods.length})`
);

// Breadcrumb data
const _breadcrumbs = [
  { label: hotel.name, href: `/${hotelSubdomain}` },
  { label: 'Contact', href: `/${hotelSubdomain}/contact` },
];

// Hero image (use hotel logo or a default contact image)
const _heroImageUrl = hotel.logo
  ? getMediaUrl(hotel.logo.id, { width: 1920, height: 1080, quality: 95 })
  : '';
---

<Layout
  title={`Contact - ${hotel.name}`}
  description={`Get in touch with ${hotel.name}. Find our contact information, location, and ways to reach us.`}
  hotel={hotel}
  hotelSubdomain={hotelSubdomain}
  hotelDomain={hotel.domain}
>
  <!-- Breadcrumb Navigation -->
  <Breadcrumb items={_breadcrumbs} client:load />

  <!-- Page Header -->
  <section class="bg-base-100 px-4 py-20 border-b border-base-300">
    <div class="mx-auto max-w-7xl container">
      <div class="text-center">
        <h1
          class="mb-6 font-primary font-bold text-primary text-4xl md:text-5xl"
        >
          Contact Us
        </h1>
        <p
          class="mx-auto max-w-3xl font-secondary text-base-content/80 text-lg leading-relaxed"
        >
          We&apos;re here to help make your stay exceptional. Get in touch with
          us for reservations, inquiries, or any assistance you may need.
        </p>
      </div>
    </div>
  </section>

  <!-- Contact Information -->
  <section class="bg-base-100 py-16">
    <div class="mx-auto px-4 container">
      <div class="gap-12 grid grid-cols-1 lg:grid-cols-2">
        <!-- Contact Details -->
        <div class="space-y-8">
          <div>
            <h2
              class="mb-6 font-primary font-bold text-primary text-2xl md:text-3xl"
            >
              Get in Touch
            </h2>
            <p
              class="mb-8 font-secondary text-base-content/70 text-lg leading-relaxed"
            >
              Our team is available to assist you with any questions or special
              requests. We look forward to welcoming you to {hotel.name}.
            </p>
          </div>

          <div class="space-y-6">
            {
              hotel.contact_email && (
                <div class="flex items-start space-x-4">
                  <div class="flex-shrink-0">
                    <svg
                      class="w-6 h-6 text-primary"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <title>Email icon</title>
                      <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                      <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-primary font-semibold text-base-content text-lg">
                      Email
                    </h3>
                    <a
                      href={`mailto:${hotel.contact_email}`}
                      class="font-secondary text-primary hover:text-primary-focus transition-colors"
                    >
                      {hotel.contact_email}
                    </a>
                  </div>
                </div>
              )
            }

            {
              hotel.contact_phone_calls && (
                <div class="flex items-start space-x-4">
                  <div class="flex-shrink-0">
                    <svg
                      class="w-6 h-6 text-primary"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <title>Phone icon</title>
                      <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-primary font-semibold text-base-content text-lg">
                      Phone
                    </h3>
                    <a
                      href={`tel:${hotel.contact_phone_calls}`}
                      class="font-secondary text-primary hover:text-primary-focus transition-colors"
                    >
                      {hotel.contact_phone_calls}
                    </a>
                  </div>
                </div>
              )
            }

            {
              hotel.contact_phone_messages &&
                hotel.contact_phone_messages !== hotel.contact_phone_calls && (
                  <div class="flex items-start space-x-4">
                    <div class="flex-shrink-0">
                      <svg
                        class="w-6 h-6 text-primary"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <title>Messages icon</title>
                        <path
                          fill-rule="evenodd"
                          d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </div>
                    <div>
                      <h3 class="font-primary font-semibold text-base-content text-lg">
                        Messages
                      </h3>
                      <a
                        href={`tel:${hotel.contact_phone_messages}`}
                        class="font-secondary text-primary hover:text-primary-focus transition-colors"
                      >
                        {hotel.contact_phone_messages}
                      </a>
                    </div>
                  </div>
                )
            }

            {
              hotel.location && (
                <div class="flex items-start space-x-4">
                  <div class="flex-shrink-0">
                    <svg
                      class="w-6 h-6 text-primary"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <title>Location icon</title>
                      <path
                        fill-rule="evenodd"
                        d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-primary font-semibold text-base-content text-lg">
                      Location
                    </h3>
                    <p class="font-secondary text-base-content/70">
                      {hotel.location}
                    </p>
                  </div>
                </div>
              )
            }
          </div>
        </div>

        <!-- Contact Form -->
        <ContactForm
          hotelId={hotel.id}
          hotelName={hotel.name}
          contactMethods={contactMethods}
          client:load
        />
      </div>
    </div>
  </section>

  <!-- Map or Additional Information Section -->
  {
    hotel.location && (
      <section class="bg-base-200 py-16">
        <div class="mx-auto px-4 container">
          <div class="text-center">
            <h2 class="mb-6 font-primary font-bold text-primary text-2xl md:text-3xl">
              Find Us
            </h2>
            <p class="mx-auto mb-8 max-w-2xl font-secondary text-base-content/70 text-lg">
              Located in the heart of {hotel.location}, {hotel.name} offers easy
              access to local attractions and amenities.
            </p>

            <div class="flex justify-center items-center bg-base-300 mx-auto rounded-lg max-w-4xl h-64">
              <div class="text-center">
                <svg
                  class="mx-auto mb-4 w-12 h-12 text-base-content/50"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <title>Map icon</title>
                  <path
                    fill-rule="evenodd"
                    d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
                    clip-rule="evenodd"
                  />
                </svg>
                <p class="font-secondary text-base-content/50">
                  {hotel.location}
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>
    )
  }
</Layout>
