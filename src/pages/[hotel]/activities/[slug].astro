---
import { DetailPageLayout } from '../../../components/DetailPageLayout.tsx';
import Layout from '../../../layouts/Layout.astro';
import { getHotelByDomain, getMediaUrl } from '../../../lib/directus.js';
import {
  isSubdomainBasedRouting,
  getHotelDomainFromRequest,
  getSubdomainFromHostname,
} from '../../../lib/domain-mapping.js';

// SSR mode - detect hotel from runtime request
const isSubdomain = isSubdomainBasedRouting(Astro.url.hostname);
const hotelDomain = getHotelDomainFromRequest(Astro.url, Astro.params);
const hotelSubdomain = isSubdomain
  ? getSubdomainFromHostname(Astro.url.hostname)
  : Astro.params.hotel;

console.log(
  `🏨 SSR Loading activity page for subdomain: ${hotelSubdomain}, slug: ${Astro.params.slug}`
);

// Get hotel data from Directus
const hotel = await getHotelByDomain(hotelDomain);

if (!hotel) {
  console.error(`❌ Hotel not found for domain: ${hotelDomain}`);
  return Astro.redirect('/404');
}

// Find the activity by slug
const activitySlug = Astro.params.slug;
const activity = hotel.activities?.find((item) => {
  const slug = item.name
    .toLowerCase()
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/(^-|-$)/g, '');
  return slug === activitySlug;
});

if (!activity) {
  console.error(`❌ Activity not found for slug: ${activitySlug}`);
  return Astro.redirect('/404');
}

// Default values
const defaultLanguage = hotel.default_language || 'en-US';
const defaultCurrency = hotel.default_currency || 'USD';

// Hotel theme data will be handled globally by Layout.astro

// Prepare activity data for DetailPageLayout
const imageUrl = activity.main_photo
  ? getMediaUrl(activity.main_photo.id, {
      width: 1200,
      height: 675,
      quality: 95,
    })
  : '';
const videoUrl = activity.main_video
  ? getMediaUrl(activity.main_video.id)
  : undefined;

// Process media gallery
const galleryImages = [];
if (activity.media_gallery && Array.isArray(activity.media_gallery)) {
  for (const mediaItem of activity.media_gallery) {
    // media_gallery now contains objects with directus_files_id
    if (mediaItem?.directus_files_id) {
      const file = mediaItem.directus_files_id;
      const isVideo = file.type?.startsWith('video/');
      const mediaUrl = isVideo
        ? getMediaUrl(file.id)
        : getMediaUrl(file.id, { width: 800, height: 600, quality: 90 });
      galleryImages.push({
        id: file.id,
        url: mediaUrl,
        title: file.title || 'Activity Gallery Image',
        type: isVideo ? 'video' : 'image',
      });
    }
  }
}

// Sort gallery images: videos first, then images
galleryImages.sort((a, b) => {
  if (a.type === 'video' && b.type === 'image') return -1;
  if (a.type === 'image' && b.type === 'video') return 1;
  return 0;
});

const activityMetadata = {
  category: activity.category,
  durationMinutes: activity.duration_minutes,
  maxParticipants: activity.max_participants,
  price: activity.price ? `${activity.price}` : undefined,
  location: activity.location,
  difficultyLevel: activity.difficulty_level,
  ageRestriction: activity.age_restriction,
  equipmentProvided: activity.equipment_provided,
  bookingRequired: activity.booking_required,
};

const breadcrumbItems = [
  {
    label: hotel.name,
    href: isSubdomain ? '/' : `/${hotelSubdomain}`,
  },
  {
    label: 'Activities',
    href: isSubdomain ? '/experiences' : `/${hotelSubdomain}/experiences`,
  },
  { label: activity.name },
];
---

<Layout
  title={`${activity.name} - ${hotel.name}`}
  description={activity.description ||
    `Join our exciting ${activity.name} activity at ${hotel.name}`}
  domain={hotel.domain}
  ga4Id={hotel.analytics?.ga4_id}
  pixelId={hotel.analytics?.pixel_id}
  hotel={hotel}
  hotelSubdomain={hotelSubdomain}
  showNavbar={true}
>
  <DetailPageLayout
    title={activity.name}
    description={activity.description ||
      `Experience our exciting ${activity.name} activity.`}
    type="activity"
    imageUrl={imageUrl}
    videoUrl={videoUrl}
    galleryImages={galleryImages}
    metadata={activityMetadata}
    hotelName={hotel.name}
    hotelSlug={hotelSubdomain}
    defaultCurrency={defaultCurrency}
    breadcrumbItems={breadcrumbItems}
    client:load
  />
</Layout>
