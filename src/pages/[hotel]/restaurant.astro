---
import Layout from '../../layouts/Layout.astro';
import { Breadcrumb } from '../../components/Breadcrumb.tsx';
import { DishCard } from '../../components/DishCard.tsx';
import {
  getAllHotels,
  getHotelByDomain,
  getMediaUrl,
  getTranslatedContent,
} from '../../lib/directus.js';
import {
  isSubdomainBasedRouting,
  getHotelDomainFromRequest,
  getSubdomainFromHostname,
} from '../../lib/domain-mapping.js';

// SSR mode - detect hotel from runtime request
const isSubdomain = isSubdomainBasedRouting(Astro.url.hostname);
const hotelDomain = getHotelDomainFromRequest(Astro.url, Astro.params);
const hotelSubdomain = isSubdomain
  ? getSubdomainFromHostname(Astro.url.hostname)
  : Astro.params.hotel;

console.log(
  `üè® SSR Loading restaurant page for subdomain: ${hotelSubdomain}, full domain: ${hotelDomain}`
);

// Get hotel data from Directus
const hotel = await getHotelByDomain(hotelDomain);

if (!hotel) {
  console.error(`‚ùå Hotel not found for domain: ${hotelDomain}`);
  return Astro.redirect('/404');
}

// Extract hotel properties for SSR mode
const hotelId = hotel.id;
const hotelName = hotel.name;
const defaultLanguage = hotel.default_language || 'en-US';
const defaultCurrency = hotel.default_currency || 'USD';

// Get current language (default to English for now)
const currentLanguage = defaultLanguage || 'en-US';

// Hotel data is already loaded in the 'hotel' variable from SSR
// No need to process further, just use it directly

// Get restaurant data
const restaurant = hotel.restaurant;
if (!restaurant) {
  throw new Error(`Restaurant not found for hotel: ${hotel.name}`);
}

// Process restaurant with translations
const restaurantData = {
  id: restaurant.id,
  name:
    getTranslatedContent(restaurant, currentLanguage).name || restaurant.name,
  description:
    getTranslatedContent(restaurant, currentLanguage).description ||
    restaurant.description,
  main_photo: restaurant.main_photo,
  main_video: restaurant.main_video,
};

console.log(
  `‚úÖ Restaurant page loaded: ${hotel.name} - ${restaurantData.name} (${hotel.dishes?.length || 0} featured dishes)`
);

// Breadcrumb data - conditional URLs based on routing type
const _breadcrumbs = [
  {
    label: hotel.name,
    href: isSubdomain ? '/' : `/${hotelSubdomain}`,
  },
  {
    label: 'Restaurant',
    href: isSubdomain ? '/restaurant' : `/${hotelSubdomain}/restaurant`,
  },
];

// Hero media URLs
const _heroImageUrl = restaurantData.main_photo
  ? getMediaUrl(restaurantData.main_photo.id, {
      width: 1920,
      height: 1080,
      quality: 95,
    })
  : '';
const heroVideoUrl = restaurantData.main_video
  ? getMediaUrl(restaurantData.main_video.id)
  : undefined;

console.log(
  `üé• Restaurant ${restaurantData.name}: has video = ${!!restaurantData.main_video}, videoUrl = ${heroVideoUrl}`
);
---

<Layout
  title={`${restaurantData.name} - ${hotel.name}`}
  description={restaurantData.description}
  hotel={hotel}
  hotelSubdomain={hotelSubdomain}
  hotelDomain={hotel.domain}
>
  <!-- Breadcrumb Navigation -->
  <Breadcrumb items={_breadcrumbs} client:load />

  <!-- Hero Section -->
  <section class="relative h-[60vh] min-h-[400px] overflow-hidden">
    {
      heroVideoUrl ? (
        <video
          src={heroVideoUrl}
          poster={_heroImageUrl}
          autoplay
          muted
          loop
          playsInline
          class="absolute inset-0 w-full h-full object-cover"
        >
          <track kind="captions" src="" label="No captions available" default />
        </video>
      ) : (
        <img
          src={_heroImageUrl}
          alt={restaurantData.name}
          class="absolute inset-0 w-full h-full object-cover"
        />
      )
    }

    <!-- Hero Overlay -->
    <div class="absolute inset-0 bg-neutral/50"></div>

    <!-- Hero Content -->
    <div class="z-10 relative flex justify-center items-center h-full">
      <div class="mx-auto px-4 max-w-3xl text-neutral-content text-center">
        <h1 class="mb-6 font-primary font-bold text-4xl md:text-5xl">
          {restaurantData.name}
        </h1>
      </div>
    </div>
  </section>

  <!-- Restaurant Description Section -->
  <section class="bg-base-100 px-4 py-16 border-b border-base-300">
    <div class="mx-auto max-w-4xl container">
      <div class="text-center">
        <p
          class="mx-auto max-w-3xl font-secondary text-base-content/80 text-lg leading-relaxed"
        >
          {restaurantData.description}
        </p>
      </div>
    </div>
  </section>

  <!-- Featured Dishes Section -->
  {
    hotel.dishes && hotel.dishes.length > 0 && (
      <section class="bg-base-100 py-16">
        <div class="mx-auto px-4 container">
          <div class="mb-12 text-center">
            <h2 class="mb-4 font-primary font-bold text-primary text-3xl md:text-4xl">
              Featured Dishes
            </h2>
            <p class="mx-auto max-w-2xl font-secondary text-base-content/80 text-lg">
              Discover our chef&apos;s signature creations and most beloved
              specialties
            </p>
          </div>

          {/* Dishes Grid */}
          <div class="gap-8 grid grid-cols-1 md:grid-cols-2 mb-12">
            {hotel.dishes.map((dish, index) => {
              const imageUrl = dish.main_photo
                ? getMediaUrl(dish.main_photo.id, {
                    width: 600,
                    height: 400,
                    quality: 95,
                  })
                : '';

              return (
                <DishCard
                  key={dish.id || index}
                  name={dish.name}
                  description={dish.description}
                  price={dish.price}
                  ingredients={dish.ingredients || []}
                  dietary_options={dish.dietary_options || []}
                  allergens={dish.allergens || []}
                  calories={dish.calories}
                  imageUrl={imageUrl}
                  isAvailable={dish.is_available}
                  defaultCurrency={hotel.default_currency}
                  isLast={index === hotel.dishes.length - 1}
                  isOdd={hotel.dishes.length % 2 !== 0}
                  client:load
                />
              );
            })}
          </div>

          {/* CTAs */}
          <div class="text-center">
            <a
              href={isSubdomain ? '/menu' : `/${hotelSubdomain}/menu`}
              class="font-secondary btn btn-primary btn-lg"
            >
              View Full Menu
            </a>
          </div>
        </div>
      </section>
    )
  }

  <!-- No Featured Dishes Message -->
  {
    (!hotel.dishes || hotel.dishes.length === 0) && (
      <section class="bg-base-100 py-16">
        <div class="mx-auto px-4 text-center container">
          <h2 class="mb-4 font-primary font-bold text-primary text-3xl md:text-4xl">
            Our Restaurant
          </h2>
          <p class="mx-auto mb-8 max-w-2xl font-secondary text-base-content/80 text-lg">
            Experience exceptional dining with carefully crafted dishes using
            the finest local ingredients.
          </p>

          {/* CTAs */}
          <div class="text-center">
            <a
              href={isSubdomain ? '/menu' : `/${hotelSubdomain}/menu`}
              class="font-secondary btn btn-primary btn-lg"
            >
              View Full Menu
            </a>
          </div>
        </div>
      </section>
    )
  }
</Layout>
