---
import { ActivityCard } from '../../components/ActivityCard.tsx';
import CollectionPageLayout from '../../layouts/CollectionPageLayout.astro';
import {
  getAllHotels,
  getHotelByDomain,
  getMediaUrl,
  getTranslatedContent,
} from '../../lib/directus.js';
import {
  isSubdomainBasedRouting,
  getHotelDomainFromRequest,
  getSubdomainFromHostname,
} from '../../lib/domain-mapping.js';

// SSR mode - detect hotel from runtime request
const isSubdomain = isSubdomainBasedRouting(Astro.url.hostname);
const hotelDomain = getHotelDomainFromRequest(Astro.url, Astro.params);
const hotelSubdomain = isSubdomain
  ? getSubdomainFromHostname(Astro.url.hostname)
  : Astro.params.hotel;

console.log(
  `üè® SSR Loading experiences page for subdomain: ${hotelSubdomain}, full domain: ${hotelDomain}`
);

// Get hotel data from Directus
const hotel = await getHotelByDomain(hotelDomain);

if (!hotel) {
  console.error(`‚ùå Hotel not found for domain: ${hotelDomain}`);
  return Astro.redirect('/404');
}

// Extract hotel properties for SSR mode
const hotelId = hotel.id;
const hotelName = hotel.name;
const defaultLanguage = hotel.default_language || 'en-US';
const defaultCurrency = hotel.default_currency || 'USD';

// Get current language (default to English for now)
const currentLanguage = defaultLanguage || 'en-US';

// Hotel data is already loaded in the 'hotel' variable from SSR
// No need to process further, just use it directly

// Breadcrumb items
const _breadcrumbItems = [
  { label: 'Home', href: `/${hotelSubdomain}` },
  { label: 'Experiences' },
];

console.log(
  `‚úÖ Experiences page loaded: ${hotel.name} (${hotel.activities?.length || 0} activities)`
);
---

<CollectionPageLayout
  title={`Experiences - ${hotel.name}`}
  description={`Discover unique experiences at ${hotel.name}. From adventure activities to cultural tours, create unforgettable memories during your stay.`}
  pageTitle="Our Experiences"
  pageDescription="Discover unique experiences designed to create unforgettable memories. From adventure activities to cultural tours, we offer something special for every guest."
  hotel={hotel}
  hotelSubdomain={hotelSubdomain}
  hotelDomain={hotel.domain}
  isSubdomain={isSubdomain}
  items={hotel.activities || []}
  itemType="experiences"
  breadcrumbItems={_breadcrumbItems}
  ctaTitle="Ready for Your Next Adventure?"
  ctaDescription={`Book your stay at ${hotel.name} and unlock access to all our exclusive experiences and activities.`}
  ctaPrimaryText="Book Now"
  ctaPrimaryHref={`/${hotelSubdomain}/book`}
  ctaSecondaryText="Explore More"
  ctaSecondaryHref={`/${hotelSubdomain}`}
  gridId="experiencesGrid"
>
  <Fragment slot="items">
    {
      hotel.activities?.map((activity, index) => {
        const imageUrl = activity.main_photo
          ? getMediaUrl(activity.main_photo.id, {
              width: 800,
              height: 450,
              quality: 95,
            })
          : '';
        const videoUrl = activity.main_video
          ? getMediaUrl(activity.main_video.id)
          : undefined;

        // Create slug from activity name
        const activitySlug = activity.name
          .toLowerCase()
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/(^-|-$)/g, '');

        console.log(
          `üé• Activity ${activity.name}: has video = ${!!activity.main_video}, videoUrl = ${videoUrl}`
        );

        return (
          <ActivityCard
            key={activity.id || index}
            name={activity.name}
            description={activity.description}
            maxParticipants={activity.max_participants}
            ageRestriction={activity.age_restriction}
            equipmentProvided={activity.equipment_provided}
            operatingHours={activity.operating_hours}
            defaultCurrency={defaultCurrency}
            imageUrl={imageUrl}
            videoUrl={videoUrl}
            isLast={index === hotel.activities.length - 1}
            isOdd={hotel.activities.length % 2 !== 0}
            hotelSlug={hotelSubdomain}
            activitySlug={activitySlug}
            isSubdomain={isSubdomain}
            client:load
          />
        );
      })
    }
  </Fragment>
</CollectionPageLayout>
