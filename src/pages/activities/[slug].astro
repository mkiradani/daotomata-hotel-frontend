---
export const prerender = true; // ‚úÖ SSG - Pre-render at build time

import { DetailPageLayout } from '../../components/DetailPageLayout.tsx';
import Layout from '../../layouts/Layout.astro';
import { getCurrentHotel, getMediaUrl, processMediaGallery } from '../../lib/directus.js';

// Generate static paths for all activities
export async function getStaticPaths() {
  const hotel: any = await getCurrentHotel();

  if (!hotel || !hotel.activities) {
    return [];
  }

  return hotel.activities.map((activity: any) => ({
    params: {
      slug: activity.name?.toLowerCase().replace(/\s+/g, '-') || activity.id?.toString()
    },
  }));
}

console.log(`üèóÔ∏è [BUILD] Pre-rendering activity detail page...`);

// Get hotel data from environment variable
const hotel: any = await getCurrentHotel();

if (!hotel) {
  throw new Error('Hotel not found. Check HOTEL_ID in environment variables.');
}

const { slug } = Astro.params;

console.log(`‚úÖ [BUILD] Hotel loaded: ${hotel.name}, looking for activity: ${slug}`);

// Find the specific activity
const activity = hotel.activities?.find((a: any) => 
  a.name?.toLowerCase().replace(/\s+/g, '-') === slug ||
  a.slug === slug ||
  a.id?.toString() === slug
);

if (!activity) {
  console.error(`‚ùå [BUILD] Activity not found: ${slug}`);
  return Astro.redirect('/404');
}

console.log(`‚úÖ [BUILD] Activity found: ${activity.name} (ID: ${activity.id})`);

// Simple theme name extraction
const hotelSlug = hotel.domain?.split('.')[0] || 'default';

// Process activity media
const mainImageUrl = activity.main_photo
  ? getMediaUrl(activity.main_photo.id || activity.main_photo, {
      width: 1200,
      height: 675,
      quality: 95,
    }) || ''
  : '';

const mainVideoUrl = activity.main_video
  ? getMediaUrl(activity.main_video.id || activity.main_video) || ''
  : '';

// Process gallery images with automatic type detection
const galleryImages = processMediaGallery(activity.media_gallery, activity.name) as Array<{
  id: string;
  url: string;
  title?: string;
  type?: "image" | "video";
}>;

// Process activity metadata
const metadata = {
  duration: activity.duration,
  difficultyLevel: activity.difficulty_level,
  minAge: activity.min_age,
  maxParticipants: activity.max_participants,
  pricePerPerson: activity.price_per_person,
  includes: activity.includes,
  requirements: activity.requirements,
};

const pageTitle = `${activity.name} - ${hotel.name}`;
const pageDescription = activity.description || `Experience ${activity.name} at ${hotel.name}`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  hotel={hotel}
  hotelName={hotel.name}
>
  <DetailPageLayout
    title={activity.name}
    description={activity.description || ''}
    type="activity"
    imageUrl={mainImageUrl}
    videoUrl={mainVideoUrl}
    galleryImages={galleryImages}
    metadata={metadata}
    hotelName={hotel.name}
    hotelSlug={hotelSlug}
    defaultCurrency={hotel.default_currency || 'EUR'}
    breadcrumbItems={[
      { label: 'Home', href: '/' },
      { label: 'Experiences', href: '/experiences' },
      { label: activity.name, href: `/activities/${slug}` }
    ]}
  />
</Layout>
